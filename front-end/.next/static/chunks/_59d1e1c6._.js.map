{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aless/OneDrive/Documentos/GitHub/Trabalho_WEB_Final/front-end/lib/animaisApi.ts"],"sourcesContent":["// lib/animaisApi.ts\r\nimport axios from 'axios';\r\n\r\nconst API_BASE_URL = axios.create({\r\n  baseURL: \"http://localhost:3000/\",\r\n});;\r\n\r\n// Tipo para o modelo de Animal baseado no seu Prisma schema\r\nexport type Animal = {\r\n  id: number;\r\n  especie: string;\r\n  nome: string;\r\n  data_nascimento: string; // Ou Date, dependendo de como você serializa\r\n  porte: string;\r\n  sexo: string;\r\n  descricao: string;\r\n  idOng?: number | null; // Opcional, pois pode ser nulo\r\n  ong?: { // Incluindo a ONG para exibição\r\n    nome: string;\r\n  } | null;\r\n};\r\n\r\n// Função para obter todos os animais\r\nexport const getAnimais = async () => {\r\n  return await API_BASE_URL.get(`/animais`);\r\n};\r\n\r\n// Função para obter um único animal por ID\r\nexport const getAnimal = async (id: number) => {\r\n  return await API_BASE_URL.get<Animal>(`/animais/${id}`);\r\n};\r\n\r\n// Função para criar um novo animal\r\nexport const createAnimal = async (data: Omit<Animal, 'id' | 'ong'>) => {\r\n  return await API_BASE_URL.post<Animal>(`/animais`, data);\r\n};\r\n\r\n// Função para atualizar um animal existente\r\nexport const updateAnimal = async (id: number, data: Partial<Omit<Animal, 'id' | 'ong'>>) => {\r\n  return await API_BASE_URL.patch<Animal>(`/animais/${id}`, data);\r\n};\r\n\r\n// Função para deletar um animal\r\nexport const deleteAnimal = async (id: number) => {\r\n  return await API_BASE_URL.delete(`/animais/${id}`);\r\n};\r\n"],"names":[],"mappings":"AAAA,oBAAoB;;;;;;;;AACpB;;AAEA,MAAM,eAAe,wIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IAChC,SAAS;AACX;AAkBO,MAAM,aAAa;IACxB,OAAO,MAAM,aAAa,GAAG,CAAC,CAAC,QAAQ,CAAC;AAC1C;AAGO,MAAM,YAAY,OAAO;IAC9B,OAAO,MAAM,aAAa,GAAG,CAAS,CAAC,SAAS,EAAE,IAAI;AACxD;AAGO,MAAM,eAAe,OAAO;IACjC,OAAO,MAAM,aAAa,IAAI,CAAS,CAAC,QAAQ,CAAC,EAAE;AACrD;AAGO,MAAM,eAAe,OAAO,IAAY;IAC7C,OAAO,MAAM,aAAa,KAAK,CAAS,CAAC,SAAS,EAAE,IAAI,EAAE;AAC5D;AAGO,MAAM,eAAe,OAAO;IACjC,OAAO,MAAM,aAAa,MAAM,CAAC,CAAC,SAAS,EAAE,IAAI;AACnD","debugId":null}},
    {"offset": {"line": 44, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aless/OneDrive/Documentos/GitHub/Trabalho_WEB_Final/front-end/app/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { getAnimais, Animal } from \"@/lib/animaisApi\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Link from 'next/link'; \r\n\r\nexport default function AnimaisPage() {\r\n  const [animais, setAnimais] = useState<Animal[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const fetchAllAnimais = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await getAnimais();\r\n      setAnimais(response.data);\r\n    } catch (err) {\r\n      setError(\"Não foi possível carregar os animais. Verifique o back-end da aplicação.\");\r\n      console.error(err);\r\n      setAnimais([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAllAnimais();\r\n  }, []); \r\n\r\n  const renderContent = () => {\r\n    if (loading) {\r\n      return (\r\n        <div className=\"flex justify-center items-center py-20\">\r\n          <p className=\"text-lg text-gray-600\">A processar...</p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <div className=\"text-center py-20\">\r\n                <p className=\"text-lg text-red-500\">{error}</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (animais.length === 0) {\r\n        return (\r\n            <div className=\"text-center py-20\">\r\n                <p className=\"text-lg text-gray-500\">Nenhum animal para exibir.</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n            {animais.map((animal) => (\r\n              <div \r\n                key={animal.id} \r\n                className=\"bg-white rounded-lg shadow-md p-6 border border-gray-200 hover:shadow-xl hover:-translate-y-1 transition-transform duration-300 flex flex-col justify-between\"\r\n              >\r\n                <div>\r\n                  <h2 className=\"text-2xl font-semibold text-gray-800 mb-4\">\r\n                    {animal.nome} ({animal.especie})\r\n                  </h2>\r\n                  <div className=\"space-y-3 text-gray-600\">\r\n                    <p><strong>Porte:</strong> {animal.porte}</p>\r\n                    <p><strong>Sexo:</strong> {animal.sexo}</p>\r\n                    <p><strong>Nascimento:</strong> {new Date(animal.data_nascimento).toLocaleDateString()}</p>\r\n                    <p><strong>Descrição:</strong> {animal.descricao}</p>\r\n                    {animal.ong && (\r\n                      <p><strong>ONG:</strong> {animal.ong.nome}</p>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div className=\"mt-6\">\r\n                  <Link href={`/${animal.id}`}>\r\n                      <button className=\"w-full bg-gray-200 text-gray-800 font-semibold py-2 px-4 rounded-lg hover:bg-gray-300 transition-colors duration-300\">\r\n                          Visualizar Detalhes\r\n                      </button>\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            ))}\r\n        </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-4 md:p-8 font-sans bg-gray-50 min-h-screen\">\r\n      <div className=\"flex flex-col md:flex-row justify-between items-center border-b pb-4 mb-6 gap-4 md:gap-0\">\r\n          <h1 className=\"text-4xl font-bold text-gray-800 text-center md:text-left mb-4 md:mb-0\">\r\n              Painel Principal de Animais\r\n          </h1>\r\n          <div className=\"flex flex-wrap justify-center gap-4\">\r\n            <Link href=\"/usuarios\">\r\n                <button className=\"bg-purple-600 text-white font-bold py-2 px-5 rounded-lg hover:bg-purple-700 transition-colors duration-300 shadow-sm\">\r\n                    Usuários\r\n                </button>\r\n            </Link>\r\n            <Link href=\"/ongs\">\r\n                <button className=\"bg-green-600 text-white font-bold py-2 px-5 rounded-lg hover:bg-green-700 transition-colors duration-300 shadow-sm\">\r\n                    ONGs\r\n                </button>\r\n            </Link>\r\n            <Link href=\"/new\">\r\n                <button className=\"bg-blue-600 text-white font-bold py-2 px-5 rounded-lg hover:bg-blue-700 transition-colors duration-300 shadow-sm\">\r\n                    Novo Animal\r\n                </button>\r\n            </Link>\r\n          </div>\r\n      </div>\r\n\r\n      {renderContent()}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}